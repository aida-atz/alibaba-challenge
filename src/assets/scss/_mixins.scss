@mixin position($type, $top, $bottom, $right, $left) {
  position: $type;
  top: $top;
  bottom: $bottom;
  right: $right;
  left: $left;
}
@mixin typography($element, $screenSize: sm) {
  $media: map-get($typography, $screenSize);
  @if $media {
    $level: map-get($media, $element);
    @if $level {
      @each $propertyName, $propertyValue in $level {
        #{$propertyName}: $propertyValue;
      }
    }
  }
}

@mixin pulse-animation() {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
}
@mixin flexible(
  $direction: row,
  $justify-content: center,
  $align-items: center,
  $gap: 0
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify-content;
  align-items: $align-items;
  gap: $gap;
}
@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}
